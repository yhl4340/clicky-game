{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erin\\\\Desktop\\\\UWbootcamp\\\\clicky-game\\\\clickygame\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: 0,\n      friends,\n      correctScore: 0,\n      clickedArr: [],\n      msg: ''\n    };\n\n    this.handleClick = event => {\n      const index = event.target.alt;\n      const lastClicked = this.state.clickedArr.indexOf(index) > -1;\n      console.log('last clicked', lastClicked);\n\n      if (this.state.lastClicked.includes(id)) {\n        console.log('id ', id);\n        this.setState({\n          correctScore: 0,\n          clickedArr: [],\n          msg: 'Sorry',\n          clicked: true\n        }); // if (lastClicked === 0 ){\n        //   this.setState({\n        //     friends: this.state.friends.sort((a,b) => {\n        //       console.log('friend clicked', lastClicked)\n        //       return 0.5- Math.random();\n        //     }),\n        //   clickedArr: [],\n        //   correctScore:0,\n        //   msg: 'correct'\n        // });\n      } else {\n        this.setState({\n          friends: this.state.friends.sort((a, b) => {\n            return 0.5 - Math.random();\n          }),\n          lastClicked: this.state.clickedArr.push(index),\n          correctScore: this.state.correctScore + 1\n        });\n      }\n    };\n  }\n\n  // having friends randomly generated\n  // clickPic = id => {\n  //   const ranArr = this.ranArr(friends);\n  //   this.setState({friends: ranArr});\n  //   if (this.state.clickedArr.includes(id)){\n  //     console.log('id ', id)\n  //     this.setState({correctScore:0, clickedArr:[],msg: 'Sorry',clicked: true})\n  //   }\n  //   else {\n  //     this.setState({\n  //       clickedArr:this.state.clickedArr([id]),\n  //       score: this.state.score + 1,\n  //       msg: 'Correct',\n  //       clicked: false\n  //     });\n  //   }\n  // }\n  // function for randomly generated pic. ec6 way to shuffle an arrary\n  // ranArr = (picArr) => {\n  //   for ( var i = 0; i < picArr.length; i++){\n  //     const j = Math.floor(Math.random()*(i+1));\n  //     [picArr[i], picArr[j]]= [picArr[j], picArr[i]]\n  //     console.log('j: ', picArr[j], 'i', picArr[i])\n  //   }\n  //   return picArr;\n  // }\n  // handleClick = ()=> {\n  //   console.log('im clicked')\n  //   this.setState({clicked: true})\n  // };\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), this.state.friends.map(friend => React.createElement(Cards, {\n      id: friend.id,\n      key: friend.id,\n      image: friend.image,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Erin\\Desktop\\UWbootcamp\\clicky-game\\clickygame\\src\\App.js"],"names":["React","Component","Jumbotron","Navbar","Cards","friends","App","state","clicked","correctScore","clickedArr","msg","handleClick","event","index","target","alt","lastClicked","indexOf","console","log","includes","id","setState","sort","a","b","Math","random","push","render","map","friend","image"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACFC,MAAAA,OAAO,EAAG,CADR;AAEFH,MAAAA,OAFE;AAGFI,MAAAA,YAAY,EAAE,CAHZ;AAIFC,MAAAA,UAAU,EAAC,EAJT;AAKFC,MAAAA,GAAG,EAAE;AALH,KADkB;;AAAA,SAS1BC,WAT0B,GASZC,KAAK,IAAI;AACrB,YAAOC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,GAA5B;AACA,YAAMC,WAAW,GAAG,KAAKV,KAAL,CAAWG,UAAX,CAAsBQ,OAAtB,CAA8BJ,KAA9B,IAAsC,CAAC,CAA3D;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,WAA5B;;AACA,UAAI,KAAKV,KAAL,CAAWU,WAAX,CAAuBI,QAAvB,CAAgCC,EAAhC,CAAJ,EAAwC;AACrCH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,EAAnB;AACC,aAAKC,QAAL,CAAc;AAACd,UAAAA,YAAY,EAAC,CAAd;AAAiBC,UAAAA,UAAU,EAAC,EAA5B;AAA+BC,UAAAA,GAAG,EAAE,OAApC;AAA4CH,UAAAA,OAAO,EAAE;AAArD,SAAd,EAFoC,CAMxC;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACD,OAhBD,MAiBK;AACH,aAAKe,QAAL,CACE;AACAlB,UAAAA,OAAO,EAAC,KAAKE,KAAL,CAAWF,OAAX,CAAmBmB,IAAnB,CAAwB,CAACC,CAAD,EAAGC,CAAH,KAAQ;AACtC,mBAAO,MAAMC,IAAI,CAACC,MAAL,EAAb;AACD,WAFO,CADR;AAIAX,UAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWG,UAAX,CAAsBmB,IAAtB,CAA2Bf,KAA3B,CAJb;AAKAL,UAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWE,YAAX,GAA0B;AALxC,SADF;AAQD;AACF,KAxCyB;AAAA;;AAyC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAqB,EAAAA,MAAM,GAAG;AACP,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGK,KAAKvB,KAAL,CAAWF,OAAX,CAAmB0B,GAAnB,CAAuBC,MAAM,IAC5B,oBAAC,KAAD;AACE,MAAA,EAAE,EAAEA,MAAM,CAACV,EADb;AAEE,MAAA,GAAG,EAAGU,MAAM,CAACV,EAFf;AAGE,MAAA,KAAK,EAAEU,MAAM,CAACC,KAHhB;AAIE,MAAA,OAAO,EAAI,KAAKrB,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHL,CADA;AAgBC;;AA3FuB;;AA8F5B,eAAeN,GAAf","sourcesContent":["\nimport React, {Component} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\n\nclass App extends Component {\n  state = {\n        clicked : 0,\n        friends,\n        correctScore: 0,\n        clickedArr:[],\n        msg: ''\n  };\n\n  handleClick = event => {\n    const  index = event.target.alt;\n    const lastClicked = this.state.clickedArr.indexOf(index)> -1;\n    console.log('last clicked', lastClicked);\n    if (this.state.lastClicked.includes(id)){\n       console.log('id ', id)\n        this.setState({correctScore:0, clickedArr:[],msg: 'Sorry',clicked: true})\n        \n\n\n    // if (lastClicked === 0 ){\n    //   this.setState({\n    //     friends: this.state.friends.sort((a,b) => {\n    //       console.log('friend clicked', lastClicked)\n    //       return 0.5- Math.random();\n    //     }),\n      //   clickedArr: [],\n      //   correctScore:0,\n      //   msg: 'correct'\n      // });\n    } \n    else {\n      this.setState(\n        {\n        friends:this.state.friends.sort((a,b)=> {\n          return 0.5 - Math.random();\n        }),\n        lastClicked: this.state.clickedArr.push(index),\n        correctScore: this.state.correctScore + 1\n      })\n    }\n  }\n  // having friends randomly generated\n  // clickPic = id => {\n  //   const ranArr = this.ranArr(friends);\n  //   this.setState({friends: ranArr});\n  //   if (this.state.clickedArr.includes(id)){\n  //     console.log('id ', id)\n  //     this.setState({correctScore:0, clickedArr:[],msg: 'Sorry',clicked: true})\n  //   }\n  //   else {\n  //     this.setState({\n  //       clickedArr:this.state.clickedArr([id]),\n  //       score: this.state.score + 1,\n  //       msg: 'Correct',\n  //       clicked: false\n  //     });\n  //   }\n  // }\n\n// function for randomly generated pic. ec6 way to shuffle an arrary\n  // ranArr = (picArr) => {\n  //   for ( var i = 0; i < picArr.length; i++){\n  //     const j = Math.floor(Math.random()*(i+1));\n  //     [picArr[i], picArr[j]]= [picArr[j], picArr[i]]\n  //     console.log('j: ', picArr[j], 'i', picArr[i])\n  //   }\n  //   return picArr;\n  // }\n  // handleClick = ()=> {\n  //   console.log('im clicked')\n  //   this.setState({clicked: true})\n  // };\n\n\n  render() {\n    return(\n    <div>\n      <Navbar/>\n        <Jumbotron/>\n        {this.state.friends.map(friend => (\n          <Cards\n            id={friend.id}\n            key= {friend.id}\n            image={friend.image}\n            onClick = {this.handleClick}\n            />\n        ))}\n\n      </div>\n\n    )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}