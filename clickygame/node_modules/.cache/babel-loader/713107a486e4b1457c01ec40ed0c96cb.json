{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erin\\\\Desktop\\\\UWbootcamp\\\\clicky-game\\\\clickygame\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\nlet msg = '';\nlet correctScore = 0;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: 0,\n      friends,\n      correctScore: 0,\n      clickedArr: [],\n      msg: ''\n    };\n\n    this.shuffle = () => {\n      for (var i = 0; i < friends.length; i++) {\n        const j = Math.floor(Math.random() * i + 1);\n        const curFriend = friends[i];\n        friends[i] = friends[j];\n        friends[j] = curFriend;\n      }\n    };\n\n    this.newFriend = id => {\n      // new array for friends.json\n      const friends = this.state.friends; // filter out friend that is clicked\n\n      let matched = friends.filter(friend => friend.id === id); // let rand = friends(Math.floor(Math.random*i+1));\n      // if there is a match\n\n      if (matched[0].clicked == true) {\n        // matched[i].clicked = false;\n        this.setState({\n          msg: 'already clicked. sorry'\n        });\n        this.setState({\n          friends\n        });\n        this.setState({\n          correctScore\n        }); // for (let i = 0; i <friends.length; i++){\n        //   friends[i].clicked = false;\n        // }\n      } else {\n        // if no match\n        // matched[0].clicked = false;       \n        console.log('pic clicked', matched[0].clicked, 'id of pic clicked'); // for (let i = 0; i <friends.length; i++){\n        //   friends[i].clicked = false;\n        // };\n\n        friends.sort((a, b) => {\n          return 0.5 - Math.random();\n        });\n        this.setState({\n          correctScore: this.state.correctScore + 1,\n          msg: 'Good Job'\n        });\n      }\n    };\n  }\n\n  // handleClick = event => {\n  //   const btnType = event.target.clicked;\n  //    const newFriends = friends;\n  //    console.log('im clicked',this.state.id);\n  //    for (var i = 0; i< newFriends.length; i++){\n  //      if(btnType=== 1){\n  //        newFriends.image =  Math.floor(Math.random()*i+1)\n  //      console.log('1x ');\n  //     this.setState({clicked: this.state.clicked + 1})\n  //     this.setState({correctScore: this.state.correctScore + 1})\n  //     }\n  //     if(btnType<2){\n  //       console.log('2x')\n  //       this.setState({clicked:''})\n  //     }\n  //    }\n  // };\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.msg), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.correctScore), this.state.friends.map(friend => React.createElement(Cards, {\n      id: friend.id,\n      key: friend.id,\n      image: friend.image,\n      newFriend: this.newFriend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Erin\\Desktop\\UWbootcamp\\clicky-game\\clickygame\\src\\App.js"],"names":["React","Component","Jumbotron","Navbar","Cards","friends","msg","correctScore","App","state","clicked","clickedArr","shuffle","i","length","j","Math","floor","random","curFriend","newFriend","id","matched","filter","friend","setState","console","log","sort","a","b","render","map","image"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react'\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\nlet msg = '';\nlet correctScore = 0;\nclass App extends Component {\n  state = {\n        clicked : 0,\n        friends,\n        correctScore: 0,\n        clickedArr:[],\n        msg: ''\n  };\n\n\nshuffle = () => {\nfor (var i = 0; i< friends.length; i++){    \n      const j =  Math.floor(Math.random()*i+1);\n      const curFriend = friends[i];\n      friends[i]= friends[j];\n      friends[j] = curFriend;\n      }\n};\n\nnewFriend = id => {\n  // new array for friends.json\n  const friends = this.state.friends;\n  // filter out friend that is clicked\n  let matched = friends.filter(friend => friend.id=== id)\n  // let rand = friends(Math.floor(Math.random*i+1));\n \n     \n      // if there is a match\n      if(matched[0].clicked == true){\n        // matched[i].clicked = false;\n        \n        this.setState({msg:'already clicked. sorry'});\n        this.setState({friends});\n        this.setState({correctScore});\n        // for (let i = 0; i <friends.length; i++){\n        //   friends[i].clicked = false;\n        // }\n      } else  {\n        // if no match\n          // matched[0].clicked = false;       \n          console.log('pic clicked',matched[0].clicked,'id of pic clicked');\n\n          // for (let i = 0; i <friends.length; i++){\n          //   friends[i].clicked = false;\n          // };\n          friends.sort((a,b)=> {\n            return 0.5- Math.random();\n          });\n          this.setState({\n            correctScore: this.state.correctScore + 1,\n            msg:'Good Job'})\n\n}\n};\n\n// handleClick = event => {\n//   const btnType = event.target.clicked;\n   \n//    const newFriends = friends;\n//    console.log('im clicked',this.state.id);\n//    for (var i = 0; i< newFriends.length; i++){\n//      if(btnType=== 1){\n//        newFriends.image =  Math.floor(Math.random()*i+1)\n//      console.log('1x ');\n//     this.setState({clicked: this.state.clicked + 1})\n//     this.setState({correctScore: this.state.correctScore + 1})\n//     }\n//     if(btnType<2){\n//       console.log('2x')\n//       this.setState({clicked:''})\n//     }\n//    }\n   \n// };\n \n  render() {\n\n    return (\n    <div>\n      <Navbar/>\n        <Jumbotron/>\n        <h3>{this.state.msg}</h3>\n        <h4>{this.state.correctScore}</h4>\n        {this.state.friends.map(friend => (\n          <Cards\n            id={friend.id}\n            key= {friend.id}\n            image={friend.image}\n            newFriend= {this.newFriend}\n            />\n        ))}\n\n      </div>\n\n    )}\n      }\n    \nexport default App;\n"]},"metadata":{},"sourceType":"module"}