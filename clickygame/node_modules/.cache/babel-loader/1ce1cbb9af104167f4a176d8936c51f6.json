{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erin\\\\Desktop\\\\UWbootcamp\\\\clicky-game\\\\clickygame\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: 0,\n      friends,\n      correctScore: 0,\n      clickedArr: [],\n      msg: \"\"\n    };\n\n    this.newFriend = id => {\n      // new array for friends.json\n      const friends = this.state.friends; // filter out friend that is clicked\n\n      const matched = friends.filter(friend => friend.id === id);\n\n      if (matched[0].clicked) {\n        console.log(matched, 'matched');\n        console.log('score', this.state.correctScore);\n        this.state.msg = 'already clicked';\n\n        for (var i = 0; i < matched.length; i++) {\n          matched[i].cliked = false;\n        }\n\n        this.setState({\n          matched\n        });\n      } else {\n        matched[0].clicked = true;\n        this.msg = \"start again\";\n        this.setState({\n          correctScore: 0\n        }); // if(this.friends.clicked === 2){\n        //   friends.filter(friend => friend.id !==id);\n        //   this.setState({friends})\n        // }\n      }\n    };\n\n    this.handleClick = () => {\n      const btnType = event.target.attributes.getNamedItem;\n      console.log('im clicked');\n      this.setState({\n        clicked: this.state.clicked + 1\n      });\n    };\n  }\n\n  // having friends randomly generated\n  // clickPic = id => {\n  //   const ranArr = this.ranArr(friends);\n  //   this.setState({friends: ranArr});\n  //   if (this.state.clickedArr.includes(id)){\n  //     console.log('id ', id)\n  //     this.setState({correctScore:0, clickedArr:[],msg: 'Sorry',clicked: true})\n  //   }\n  //   else {\n  //     this.setState({\n  //       clickedArr:this.state.clickedArr([id]),\n  //       score: this.state.score + 1,\n  //       msg: 'Correct',\n  //       clicked: false\n  //     });\n  //   }\n  // }\n  // function for randomly generated pic. ec6 way to shuffle an arrary\n  // ranArr = (picArr) => {\n  //   for ( var i = 0; i < picArr.length; i++){\n  //     const j = Math.floor(Math.random()*(i+1));\n  //     [picArr[i], picArr[j]]= [picArr[j], picArr[i]]\n  //     console.log('j: ', picArr[j], 'i', picArr[i])\n  //   }\n  //   return picArr;\n  // }\n  // handleClick = ()=> {\n  //   console.log('im clicked')\n  //   this.setState({clicked: true})\n  // };\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), this.state.friends.map(friend => React.createElement(Cards, {\n      id: friend.id,\n      key: friend.id,\n      image: friend.image,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Erin\\Desktop\\UWbootcamp\\clicky-game\\clickygame\\src\\App.js"],"names":["React","Component","Jumbotron","Navbar","Cards","friends","App","state","clicked","correctScore","clickedArr","msg","newFriend","id","matched","filter","friend","console","log","i","length","cliked","setState","handleClick","btnType","event","target","attributes","getNamedItem","render","map","image"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react'\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\n\nclass App extends Component {\n  state = {\n        clicked : 0,\n        friends,\n        correctScore: 0,\n        clickedArr:[],\n        msg: \"\"\n  };\n\nnewFriend = id => {\n  // new array for friends.json\n  const friends = this.state.friends;\n  // filter out friend that is clicked\n  const matched = friends.filter(friend => friend.id=== id)\n  if(matched[0].clicked){\n     console.log(matched,'matched');\n    console.log('score', this.state.correctScore);\n    this.state.msg = 'already clicked';\n\n    for(var i = 0; i< matched.length; i ++){\n      matched[i].cliked = false;\n  }\n  this.setState({matched})\n  } else  {\n    matched[0].clicked = true;\n    this.msg=\"start again\";\n    this.setState({correctScore: 0})\n  \n  // if(this.friends.clicked === 2){\n  //   friends.filter(friend => friend.id !==id);\n  //   this.setState({friends})\n  // }\n  } \n}\n\nhandleClick = ()=> {\n  const btnType = event.target.attributes.getNamedItem\n   console.log('im clicked')\n   this.setState({clicked: this.state.clicked + 1})\n  };\n\n \n  // having friends randomly generated\n  // clickPic = id => {\n  //   const ranArr = this.ranArr(friends);\n  //   this.setState({friends: ranArr});\n  //   if (this.state.clickedArr.includes(id)){\n  //     console.log('id ', id)\n  //     this.setState({correctScore:0, clickedArr:[],msg: 'Sorry',clicked: true})\n  //   }\n  //   else {\n  //     this.setState({\n  //       clickedArr:this.state.clickedArr([id]),\n  //       score: this.state.score + 1,\n  //       msg: 'Correct',\n  //       clicked: false\n  //     });\n  //   }\n  // }\n\n// function for randomly generated pic. ec6 way to shuffle an arrary\n  // ranArr = (picArr) => {\n  //   for ( var i = 0; i < picArr.length; i++){\n  //     const j = Math.floor(Math.random()*(i+1));\n  //     [picArr[i], picArr[j]]= [picArr[j], picArr[i]]\n  //     console.log('j: ', picArr[j], 'i', picArr[i])\n  //   }\n  //   return picArr;\n  // }\n  // handleClick = ()=> {\n  //   console.log('im clicked')\n  //   this.setState({clicked: true})\n  // };\n\n\n  render() {\n    console.log(this.state)\n    return(\n    <div>\n      <Navbar/>\n        <Jumbotron/>\n        {this.state.friends.map(friend => (\n          <Cards\n            id={friend.id}\n            key= {friend.id}\n            image={friend.image}\n            onClick = {this.handleClick}\n            />\n        ))}\n\n      </div>\n\n    )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}