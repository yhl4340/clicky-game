{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erin\\\\Desktop\\\\UWbootcamp\\\\clicky-game\\\\clickygame\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\nlet msg = '';\nlet correctScore = 0;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false,\n      friends,\n      correctScore: 0,\n      msg: \"\"\n    };\n\n    this.shuffle = friends => {\n      let shuffled;\n    };\n\n    this.newFriend = id => {\n      // new array for friends.json\n      const newfriends = this.state.friends; // filter for match\n\n      let matched = newfriends.filter(newfriend => newfriend.id === id);\n      console.log(matched, 'match000'); // if there is a match\n\n      if (matched[0].clicked) {\n        console.log(matched[0], 'match 0');\n        this.matched.clicked = true; // below is to reset back to false\n\n        for (let i = 0; i < friends.length; i++) {\n          friends[i].clicked = false;\n        }\n\n        this.setState({\n          friends\n        });\n        this.setState({\n          correctScore\n        });\n        this.setState({\n          msg: \"already clicked. sorry\"\n        });\n      } else {\n        // if no match\n        console.log(\"pic clicked\", matched[0].clicked, \"id of pic clicked\");\n        newfriends.sort((a, b) => {\n          return 0.5 - Math.random();\n        });\n        this.setState({\n          correctScore: this.state.correctScore + 1,\n          msg: \"Good Job\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.msg), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.correctScore), this.state.friends.map(friend => React.createElement(Cards, {\n      id: friend.id,\n      key: friend.id,\n      image: friend.image,\n      newFriend: this.newFriend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Erin\\Desktop\\UWbootcamp\\clicky-game\\clickygame\\src\\App.js"],"names":["React","Component","Jumbotron","Navbar","Cards","friends","msg","correctScore","App","state","clicked","shuffle","shuffled","newFriend","id","newfriends","matched","filter","newfriend","console","log","i","length","setState","sort","a","b","Math","random","render","map","friend","image"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react'\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\nlet msg = '';\nlet correctScore = 0;\nclass App extends Component {\n  state = {\n    clicked: false,\n    friends,\n    correctScore: 0,\n    msg: \"\"\n  };\n\n\n\n\n\nshuffle = friends => {\n  let shuffled\n}\n\n\n\n\n\n  newFriend = id => {\n    // new array for friends.json\n    const newfriends = this.state.friends;\n    // filter for match\n    \n    let matched = newfriends.filter(newfriend => newfriend.id === id) \n\n    console.log(matched,'match000')\n    \n    // if there is a match\n    if (matched[0].clicked) {\n      console.log(matched[0], 'match 0')\n      this.matched.clicked = true;\n      \n      // below is to reset back to false\n      for (let i = 0; i <friends.length; i++){\n        friends[i].clicked = false;\n  \n\n      }\n      this.setState({ friends });\n      this.setState({ correctScore });\n      this.setState({ msg: \"already clicked. sorry\" });\n    } else {\n      // if no match\n     \n      console.log(\"pic clicked\", matched[0].clicked, \"id of pic clicked\");\n      \n      newfriends.sort((a, b) => {\n        return 0.5 - Math.random();\n      });\n      this.setState({\n        correctScore: this.state.correctScore + 1,\n        msg: \"Good Job\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Jumbotron />\n        <h3>{this.state.msg}</h3>\n        <h4>{this.state.correctScore}</h4>\n        {this.state.friends.map(friend => (\n          <Cards\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            newFriend={this.newFriend}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n    \nexport default App;\n"]},"metadata":{},"sourceType":"module"}