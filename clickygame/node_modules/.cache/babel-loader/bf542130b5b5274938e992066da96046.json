{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erin\\\\Desktop\\\\UWbootcamp\\\\clicky-game\\\\clickygame\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\nlet msg;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: 0,\n      friends,\n      correctScore: 0,\n      clickedArr: [],\n      msg\n    };\n\n    this.newFriend = id => {\n      // new array for friends.json\n      const friends = this.state.friends; // filter out friend that is clicked\n\n      const matched = friends.filter(friend => friend.id === id);\n\n      if (matched[0].clicked) {\n        console.log(matched, 'matched');\n        console.log('score', this.state.correctScore); // this.state.msg = 'already clicked';\n\n        for (var i = 0; i < matched.length; i++) {\n          matched[i].cliked = false;\n        }\n\n        this.setState({\n          matched\n        });\n      } else {\n        matched[0].clicked = true;\n        this.msg = \"start again\";\n        this.setState({\n          correctScore: 0\n        });\n      }\n    };\n\n    this.handleClick = event => {\n      const btnType = event.target.clicked;\n      const newFriends = friends;\n      console.log('im clicked', this.state.id);\n\n      for (var i = 0; i < newFriends.length; i++) {\n        if (btnType === 1) {\n          newFriends.image = Math.floor(Math.random() * 3) + 1;\n          console.log('1x ');\n          this.setState({\n            clicked: this.state.clicked + 1\n          });\n          this.setState({\n            correctScore: this.state.correctScore + 1\n          });\n        }\n\n        if (btnType < 2) {\n          console.log('2x');\n          this.setState({\n            clicked: ''\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), this.state.friends.map(friend => React.createElement(Cards, {\n      id: friend.id,\n      key: friend.id,\n      image: friend.image,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Erin\\Desktop\\UWbootcamp\\clicky-game\\clickygame\\src\\App.js"],"names":["React","Component","Jumbotron","Navbar","Cards","friends","msg","App","state","clicked","correctScore","clickedArr","newFriend","id","matched","filter","friend","console","log","i","length","cliked","setState","handleClick","event","btnType","target","newFriends","image","Math","floor","random","render","map"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react'\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport Navbar from './components/Navbar';\nimport Cards from './components/Cards';\nimport friends from './friends.json';\nlet msg\nclass App extends Component {\n  state = {\n        clicked : 0,\n        friends,\n        correctScore: 0,\n        clickedArr:[],\n        msg,\n  };\n\n\n\nnewFriend = id => {\n  // new array for friends.json\n  const friends = this.state.friends;\n  // filter out friend that is clicked\n  const matched = friends.filter(friend => friend.id=== id)\n  if(matched[0].clicked){\n     console.log(matched,'matched');\n    console.log('score', this.state.correctScore);\n    // this.state.msg = 'already clicked';\n\n    for(var i = 0; i< matched.length; i ++){\n      matched[i].cliked = false;\n  }\n  this.setState({matched})\n  } else  {\n    matched[0].clicked = true;\n    this.msg=\"start again\";\n    this.setState({correctScore: 0})\n  } \n}\n\nhandleClick = event => {\n  const btnType = event.target.clicked;\n   \n   const newFriends = friends;\n   console.log('im clicked',this.state.id);\n   for (var i = 0; i< newFriends.length; i++){\n     if(btnType=== 1){\n       newFriends.image =  Math.floor(Math.random()*3)+1;\n     console.log('1x ');\n    this.setState({clicked: this.state.clicked + 1})\n    this.setState({correctScore: this.state.correctScore + 1})\n    }\n    if(btnType<2){\n      console.log('2x')\n      this.setState({clicked:''})\n    }\n   }\n   \n};\n \n  render() {\n\n    return (\n    <div>\n      <Navbar/>\n        <Jumbotron/>\n        {this.state.friends.map(friend => (\n          <Cards\n            id={friend.id}\n            key= {friend.id}\n            image={friend.image}\n            handleClick = {this.handleClick}\n            />\n        ))}\n\n      </div>\n\n    )}\n      }\n    \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}